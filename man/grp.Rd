% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Adjacencies.R
\name{grp}
\alias{grp}
\alias{groups}
\title{Group vertices by adjacencies}
\usage{
grp(graph, v, etype, inclusive = TRUE, dir = 0, sort = 1,
  force = FALSE)

groups(graph, etype)
}
\arguments{
\item{graph}{an object of class \code{mixedgraph}}

\item{v}{vertices to group}

\item{etype}{edge types to group by (defaults to all)}

\item{inclusive}{logical indicating whether \code{v} should be 
included in output group.}

\item{dir}{integer(s) indicating if direction should be 
considered: 0 = undirected, 1 = from row to column; -1 = from column to row.}

\item{sort}{integer: 1 for unique but unsorted, 2 for 
sorted (0 for possibly repeated and unsorted).}

\item{force}{logical - should invalid \code{v} be ignored?}
}
\description{
Generic functions for finding groups based on edge adjacencies, 
e.g. neighbourhoods, districts or ancestral sets.
}
\details{
\code{grp()} finds all vertices that can be reached from
vertices in \code{v} by edges of the specified type, and in the 
specified direction.
For example, we can find all the ancestors of \code{v} by using 
\code{type="directed"} and \code{dir=-1} (i.e.\ go back up the edges).

\code{groups()} finds equivalence classes in a graph based on being 
connected by such a path (i.e.\ the connected components with respect 
to the specified edge types).

If any \code{v} is 
not a vertex of \code{graph}, an error is returned, unless 
\code{force=TRUE}.
}
\section{Functions}{
\itemize{
\item \code{groups}: find equivalence classes
repeat dir() vector with warning if necessary
}}

\seealso{
\code{\link{adj}} for single edge adjacencies.
repeat dir() vector with warning if necessary
}
